Outline:
	Intro:  
		HTC vs HPC
		    HPC: think parallel, super computer...
		what is condor (Livny 1988)
		     Miron realized (a) most computers are idle lots of the time
		     	   (b) many jobs that might be thrown at HPC are actually HTC.
		current uses: higgs boson
		Pools: math, chtc, campus, osg
		       (Draw pictures, make the points about environment
		       on submit machine vs execute node)
		       Math ~70 nodes;
		       CHTC 15,000 -- including 1 TB and 1/2 TB machines, many multicore.
		       Rest of campus:  2x throughput
		       OSG:   10x nodes (or maybe 2-3x)
		Why use it?
		    	1. obvious reasons: to get compute cycles.
			   e.g. parameter sweeps, simulation, aligning DNA sequences.
			
			not so obvious:
			2. reliability (restart job, checkpointing, long-running jobs,
			   gets it off laptop or desktop): applies to single job as
			   well as multiple jobs.
			3. Access to powerful hardware.
			4. programmer efficiency:  applies in a research setting!
			   you don't need to optimize code for something that might be
			   a dead-end.

	exercises 1-8;
	python
	matlab
	flocking
	flockPython
	flockMatlab


	End:
		What wasn't covered?  
		     DAGMan
		     checkpointing (self- and standard universe)
		     Big files:
		     	 
		Experiment, but play nice
			    1. run test jobs first
			    2. cluster ~5000 jobs, ~1000 idle
			    3. specify resources request_*
			    4. Large data?  # files or size:  bandwidth.
     
		